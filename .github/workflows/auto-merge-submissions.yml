name: Auto-merge Submission PRs

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]

jobs:
  auto-merge:
    # Only run for submission PRs from bot
    if: |
      startsWith(github.head_ref, 'submissions/bo3-') &&
      github.event.pull_request.user.login == 'Atlasfailed'
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      
      - name: Validate submission format
        id: validate
        run: |
          echo "🔍 Validating submission PR..."
          
          # Check if PR has submission files
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Count submission files
          SUBMISSION_COUNT=$(echo "$CHANGED_FILES" | grep -c "^submissions/bo3/.*\.json$" || true)
          
          if [ "$SUBMISSION_COUNT" -eq 0 ]; then
            echo "❌ No submission files found"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          if [ "$SUBMISSION_COUNT" -gt 1 ]; then
            echo "⚠️ Multiple submission files found (expected 1, found $SUBMISSION_COUNT)"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          # Check if only submission files were changed
          NON_SUBMISSION_COUNT=$(echo "$CHANGED_FILES" | grep -v "^submissions/bo3/.*\.json$" | wc -l || true)
          
          if [ "$NON_SUBMISSION_COUNT" -gt 0 ]; then
            echo "⚠️ Non-submission files were changed"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          echo "✅ Submission validation passed"
          echo "valid=true" >> $GITHUB_OUTPUT
      
      - name: Auto-approve PR
        if: steps.validate.outputs.valid == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "👍 Auto-approving submission PR #${{ github.event.pull_request.number }}"
          gh pr review ${{ github.event.pull_request.number }} --approve --body "✅ Automated approval: Submission validated successfully"
      
      - name: Merge PR
        if: steps.validate.outputs.valid == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔀 Merging submission PR #${{ github.event.pull_request.number }}"
          gh pr merge ${{ github.event.pull_request.number }} \
            --squash \
            --auto \
            --delete-branch \
            --subject "✅ ${{ github.event.pull_request.title }}" \
            --body "Automated merge of validated submission"
      
      - name: Summary
        if: always()
        run: |
          echo "## 🤖 Auto-merge Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.validate.outputs.valid }}" == "true" ]; then
            echo "✅ **PR #${{ github.event.pull_request.number }} validated and merged**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- 📝 Title: ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
            echo "- 🌿 Branch: \`${{ github.head_ref }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- 🎯 Next: Leaderboard will update automatically" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Validation failed - PR not merged**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please review the PR manually" >> $GITHUB_STEP_SUMMARY
          fi
