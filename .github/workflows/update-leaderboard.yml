name: Update Leaderboard and Replay Data

on:
  pull_request:
    types: [closed]
    branches: [main]
    paths: ['submissions/bo3/**']
  push:
    branches: [main]
    paths: ['submissions/bo3/**']
  workflow_dispatch:
  schedule:
    # Run every hour to catch any missed updates
    - cron: '0 * * * *'

jobs:
  update-data:
    # Only run when PR is merged, push to submissions, manually triggered, or scheduled
    if: (github.event.pull_request.merged == true) || (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r actions/requirements.txt
      
      - name: Update leaderboard
        run: |
          echo "🔄 Processing submissions and updating leaderboard..."
          python actions/update_leaderboard.py
          echo "✅ Leaderboard update complete"
      
      - name: Extract replay data
        run: |
          echo "🔄 Extracting detailed replay data..."
          python actions/extract_replay_data.py
          echo "✅ Replay data extraction complete"
      
      - name: Copy data files for GitHub Pages
        run: |
          echo "📁 Copying data files to docs/ for GitHub Pages..."
          mkdir -p docs/data
          cp public/data/*.json docs/data/
          echo "✅ Data files copied to GitHub Pages directory"
      
      - name: Check for changes
        id: changes
        run: |
          # Check if any data files changed
          CHANGED_FILES=""
          if ! git diff --quiet public/data/leaderboard.json; then
            CHANGED_FILES="$CHANGED_FILES public/data/leaderboard.json"
            echo "📊 Leaderboard changes detected"
          fi
          if ! git diff --quiet public/data/replay_database.json; then
            CHANGED_FILES="$CHANGED_FILES public/data/replay_database.json"
            echo "🎮 Replay database changes detected"
          fi
          if ! git diff --quiet public/data/player_match_history.json; then
            CHANGED_FILES="$CHANGED_FILES public/data/player_match_history.json"
            echo "📈 Player match history changes detected"
          fi
          if ! git diff --quiet docs/data/leaderboard.json 2>/dev/null; then
            CHANGED_FILES="$CHANGED_FILES docs/data/leaderboard.json"
            echo "📊 GitHub Pages leaderboard changes detected"
          fi
          if ! git diff --quiet docs/data/replay_database.json 2>/dev/null; then
            CHANGED_FILES="$CHANGED_FILES docs/data/replay_database.json"
            echo "🎮 GitHub Pages replay database changes detected"
          fi
          if ! git diff --quiet docs/data/player_match_history.json 2>/dev/null; then
            CHANGED_FILES="$CHANGED_FILES docs/data/player_match_history.json"
            echo "📈 GitHub Pages match history changes detected"
          fi
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No data changes detected"
          fi
      
      - name: Commit and push changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ steps.changes.outputs.files }}
          git commit -m "🏆 Update leaderboard and replay data [skip ci]

          Automated data update from GitHub Actions
          - Updated player rankings and statistics
          - Extracted detailed replay information
          - Generated player match histories
          
          Triggered by: ${{ github.event_name }}"
          git push
      
      - name: Summary
        run: |
          echo "## 🏆 Data Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
            echo "✅ **Data updated successfully**" >> $GITHUB_STEP_SUMMARY
            echo "📊 Changes committed and pushed to repository" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Updated files:**" >> $GITHUB_STEP_SUMMARY
            for file in ${{ steps.changes.outputs.files }}; do
              echo "- $file" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "ℹ️ **No changes needed**" >> $GITHUB_STEP_SUMMARY
            echo "📊 All data is already up to date" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Live site**: https://atlasfailed.github.io/bar-duel-championship/" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Leaderboard**: https://atlasfailed.github.io/bar-duel-championship/public/data/leaderboard.json" >> $GITHUB_STEP_SUMMARY
          echo "🎮 **Replay Database**: https://atlasfailed.github.io/bar-duel-championship/public/data/replay_database.json" >> $GITHUB_STEP_SUMMARY
          echo "📈 **Match Histories**: https://atlasfailed.github.io/bar-duel-championship/public/data/player_match_history.json" >> $GITHUB_STEP_SUMMARY